code[class*='language-'],
pre[class*='language-'] {
  -moz-tab-size: 2;
  -o-tab-size: 2;
  tab-size: 2;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  font-family: 'Fira Code Medium', 'Consolas', 'Ubuntu Mono', monospace;
  font-size: 14px;
  color: #a6accd;
  text-shadow: none;
}
pre[class*='language-'],
:not(pre) > code[class*='language-'] {
  background: #292D3E;
}

pre[class*='language-'] {
  padding: 15px;
  border-radius: 4px;
  overflow: auto;
}

pre[class*='language-'] {
  position: relative;
}
pre[class*='language-'] code {
  white-space: pre;
  display: block;
}

:not(pre) > code[class*='language-'] {
  padding: .25em;
  border-radius: 0.3em;
}
.token.namespace {
  opacity: 0.7;
}
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #6f705e;
}
.token.operator,
.token.boolean,
.token.number {
  color: #c792ea;
}
.token.attr-name,
.token.string {
  color: #e6d06c;
}
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #e6d06c;
}
.token.selector,
.token.inserted {
  color: #a6e22d;
}
.token.atrule,
.token.attr-value,
.token.keyword,
.token.important,
.token.deleted {
  color: #c792ea;
}
.token.regex,
.token.statement {
  color: #76d9e6;
}
.token.placeholder,
.token.variable {
  color: #fff;
}
.token.important,
.token.statement,
.token.bold {
  font-weight: bold;
}
.token.punctuation {
  color: #89ddff;
}
.token.entity {
  cursor: help;
}
.token.italic {
  font-style: italic;
}

/* new */
.token.function {
  color: #82aaff
}
.token.class-name {
  color: #ffcb6b
}

code.language-markup {
  color: #f9f9f9;
}
code.language-markup .token.tag {
  color: #ef3b7d;
}
code.language-markup .token.attr-name {
  color: #a6e22d;
}
code.language-markup .token.attr-value {
  color: #e6d06c;
}
code.language-markup .token.style,
code.language-markup .token.script {
  color: #76d9e6;
}
code.language-markup .token.script .token.keyword {
  color: #c792ea;
}

/* Line highlight plugin */
pre[class*='language-'][data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}
pre[data-line] .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: 0;
  margin-top: 1em;
  background: rgba(255, 255, 255, 0.08);
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}
pre[data-line] .line-highlight:before,
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: 0.4em;
  left: 0.6em;
  min-width: 1em;
  padding: 0.2em 0.5em;
  background-color: rgba(255, 255, 255, 0.4);
  color: black;
  font: bold 65%/1 sans-serif;
  height: 1em;
  line-height: 1em;
  text-align: center;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px 1px rgba(255, 255, 255, 0.7);
}
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: 0.4em;
}
